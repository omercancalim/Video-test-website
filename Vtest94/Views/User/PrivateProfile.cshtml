@model Vtest94.Models.User

@{
    ViewData["Title"] = "User Profile";
}

@section Styles {
    <link rel="stylesheet" href="~/css/Main/Middle/Profile.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" />
}

<style>
    .custom-file-input input[type="file"] {
        display: none;
    }

    .btn-custom {
        display: inline-block;
        padding: 0.5rem 1rem;
        color: white;
        background-color: #004e96;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.5s ease;
    }

    .btn-custom:hover {
        background-color: #003566;
    }

    #fileName {
        margin-left: 10px;
        color: #fff;
    }
</style>

<div class="h-100">
    <div class="d-flex justify-content-center">
        <div class="col">
            <div class="card custom-card-profile text-white">
                <div class="rounded-top text-white d-flex flex-row" style="background-color: #000; height:200px;">
                    <div class="ms-4 mt-5 mb-3 d-flex" style="width:136px">
                        <img src="@Url.Content($"~/UserPhotos/{Model.Id}/profile.jpg?v=" + DateTime.Now.Ticks)" alt="@Model.ArbitraryUsername" class="img-fluid h-100 w-auto custom-circle-img"
                             style="width: 150px; z-index: 1">
                    </div>
                    <div class="ms-3" style="margin-top:120px;">
                        <h5>@Model.ArbitraryUsername</h5>
                        <p style="margin:0">Email: @Model.Email</p>
                    </div>
                    <div class="d-flex flex-row-reverse ms-auto pe-2 pt-2">
                        <button id="uploadPhotoBtn" class="btn btn-primary align-self-start">Edit</button>
                    </div>
                </div>
                <div class="p-4">
                    <div class="d-flex justify-content-end text-center py-1">
                        <div>
                            <p class="mb-1 h5">@Model.Videos.Count</p>
                            <p class="small mb-0">Videos</p>
                        </div>
                        <div class="px-3">
                            <p class="mb-1 h5">5</p>
                            <p class="small mb-0">Followers</p>
                        </div>
                        <div>
                            <p class="mb-1 h5">6</p>
                            <p class="small mb-0">Following</p>
                        </div>
                    </div>
                </div>
                <div class="card-body p-4" style="border-bottom-left-radius:6px; border-bottom-right-radius:6px;">
                    <div class="mb-5">
                        <p class="lead fw-normal mb-1">About</p>
                        <div class="p-4">
                            <p class="font-italic mb-1">Web Developer</p>
                            <p class="font-italic mb-1">Lives in New York</p>
                            <p class="font-italic mb-0">Photographer</p>
                        </div>
                    </div>
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <p class="lead fw-normal mb-0">Recent Videos</p>
                        <p class="mb-0"><a href="#!">Show all</a></p>
                    </div>
                    <div class="row g-2">
                        @foreach (var video in Model.Videos)
                        {
                            <div class="col-12 col-md-4 col-lg-3 mb-2">
                                <a asp-controller="Video" asp-action="SelectedVideo" asp-route-videoId="@video.Id">
                                    <img src="@Url.Content($"~/thumbnails/{video.ThumbnailName}")" alt="@video.Title" class="w-100 rounded-3">
                                </a>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal for uploading photo -->
<div class="modal fade" id="uploadPhotoModal" tabindex="-1" role="dialog" aria-labelledby="uploadPhotoModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
        <div class="modal-content bg-dark">
            <div class="modal-header">
                <h5 class="modal-title" id="uploadPhotoModalLabel">Upload Photo</h5>
            </div>
            <div class="modal-body">
                <div class="upload-container">
                    <div class="custom-file-input">
                        <input type="file" id="fileInput" accept="image/*">
                        <label for="fileInput" class="btn-custom">Choose Photo</label>
                        <span id="fileName">No file chosen</span>
                    </div>
                    <div id="imagePreviewContainer" class="d-flex mt-3"></div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="cropBtn" disabled>Crop Photo</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal for cropping photo -->
<div class="modal fade" id="cropPhotoModal" tabindex="-1" role="dialog" aria-labelledby="cropPhotoModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
        <div class="modal-content bg-dark">
            <div class="modal-header">
                <h5 class="modal-title" id="cropPhotoModalLabel">Crop Photo</h5>
            </div>
            <div class="modal-body">
                <div class="crop-container d-flex"">
                    <img id="imageToCrop" src="" alt="Image to Crop" />
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="saveCroppedPhotoBtn">Save Photo</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
    <script>
        document.getElementById('uploadPhotoBtn').addEventListener('click', function () {
            document.getElementById('imagePreviewContainer').innerHTML = '';
            document.getElementById('fileName').textContent = 'No file chosen';
            $('#uploadPhotoModal').modal('show');
        });

        var cropper;

        document.getElementById('fileInput').addEventListener('change', function (e) {
            var file = e.target.files[0];
            document.getElementById('fileName').textContent = file.name;
            if (file) {
                var reader = new FileReader();
                reader.onload = function (event) {
                    var imgElement = document.createElement('img');
                    imgElement.src = event.target.result;
                    imgElement.onload = function () {
                        document.getElementById('imagePreviewContainer').innerHTML = '';
                        document.getElementById('imagePreviewContainer').appendChild(imgElement);
                        document.getElementById('cropBtn').disabled = false;
                    }
                }
                reader.readAsDataURL(file);
            }
        });

        document.getElementById('cropBtn').addEventListener('click', function () {
            var imgElement = document.querySelector('#imagePreviewContainer img');
            document.getElementById('imageToCrop').src = imgElement.src;
            $('#uploadPhotoModal').modal('hide');
            $('#cropPhotoModal').modal('show');

            cropper = new Cropper(document.getElementById('imageToCrop'), {
                aspectRatio: 1,
                viewMode: 1
            });
        });

        document.getElementById('saveCroppedPhotoBtn').addEventListener('click', function () {
            var canvas = cropper.getCroppedCanvas();
            canvas.toBlob(function (blob) {
                var formData = new FormData();
                formData.append('file', blob, 'profile.jpg');

                fetch('/User/UploadPhoto', {
                    method: 'POST',
                    body: formData
                }).then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            location.reload();
                        } else {
                            alert('Failed to upload photo.');
                        }
                    }).catch(error => {
                        console.error('Error:', error);
                    });
            });
        });
    </script>
}